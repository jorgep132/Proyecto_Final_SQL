USE 503190_jorge_pineiro;
/*
Vista para mostrar lo que devuelve la funcion PRECIOS_EN_PESOS
Esta vista va a mostrar el precio de TODOS los juegos en pesos argentinos.
Para realizar esto, la vista se ayuda de la funcion FN_PESOS.
*/
DROP VIEW IF EXISTS VW_PRECIOS_EN_PESOS;
CREATE VIEW VW_PRECIOS_EN_PESOS AS
SELECT
    TITULO,
    FN_PESOS(TITULO, 865.50) AS PRECIO_PESOS
FROM
    JUEGOS
ORDER BY TITULO ASC;
SELECT * FROM VW_PRECIOS_EN_PESOS;

/*
Vista para mostrar cuales juegos son para mayores de 18 y cuales para todo publico 
Invocamos a la funcion FN_ADULTOS
*/
DROP VIEW IF EXISTS VW_PEGI;
CREATE VIEW VW_PEGI AS
SELECT
    TITULO,
    CASE
        WHEN FN_ADULTOS(TITULO) = 'Si' THEN 'Para adultos'
        ELSE 'Para todos los públicos'
    END AS PEGI
FROM
    JUEGOS
ORDER BY TITULO ASC;
SELECT * FROM VW_PEGI;

-- Vista para ver los juegos ordenados de mejor valoración a peor.
DROP VIEW IF EXISTS VW_VALORACION;
CREATE VIEW VW_VALORACION AS
SELECT
    TITULO,
    VALORACION
FROM
    JUEGOS
ORDER BY
	VALORACION DESC;
SELECT * FROM VW_VALORACION;

-- Vista para mostrar los juegos y sus generos
DROP VIEW IF EXISTS VW_JUEGOS_GENEROS;
CREATE VIEW VW_JUEGOS_GENEROS AS
SELECT
    J.TITULO,
    GROUP_CONCAT(G.GENERO SEPARATOR ', ') AS GENEROS
FROM
    JUEGOS J
    INNER JOIN JUEGO_GENERO JG ON J.ID = JG.ID_JUEGO
    INNER JOIN GENEROS G ON JG.ID_GENERO = G.ID
GROUP BY
    J.TITULO
ORDER BY
    J.TITULO ASC;
SELECT * FROM VW_JUEGOS_GENEROS;

-- Vista para mostrar los juegos y sus plataformas
DROP VIEW IF EXISTS VW_JUEGOS_PLATAFORMAS;
CREATE VIEW VW_JUEGOS_PLATAFORMAS AS
SELECT
    J.TITULO,
    GROUP_CONCAT(P.PLATAFORMA SEPARATOR ', ') AS PLATAFORMAS
FROM
    JUEGOS J
    INNER JOIN JUEGO_PLATAFORMA JP ON J.ID = JP.ID_JUEGO
    INNER JOIN PLATAFORMAS P ON JP.ID_PLATAFORMA = P.ID
GROUP BY
    J.TITULO
ORDER BY
    J.TITULO ASC;
SELECT * FROM VW_JUEGOS_PLATAFORMAS;

-- Vista para mostrar los juegos y sus idiomas
DROP VIEW IF EXISTS VW_JUEGOS_IDIOMAS;
CREATE VIEW VW_JUEGOS_IDIOMAS AS
SELECT
    J.TITULO,
    GROUP_CONCAT(I.IDIOMA SEPARATOR ', ') AS IDIOMAS
FROM
    JUEGOS J
    INNER JOIN JUEGO_IDIOMA JI ON J.ID = JI.ID_JUEGO
    INNER JOIN IDIOMAS I ON JI.ID_IDIOMA = I.ID
GROUP BY
    J.TITULO
ORDER BY
    J.TITULO ASC;
SELECT * FROM VW_JUEGOS_IDIOMAS;
/*
Vista para mostrar la info completa de los juegos (excepto el ID), ordenados por titulo en orden alfabetico.
Tome la decision de omitir el ID ya que funciona como PK y no es informacion relevante para el usuario.
Tambien se omitio la fecha de creacion y modificacion del registro.
*/
DROP VIEW IF EXISTS VW_JUEGOS_INFO_COMPLETA;
CREATE VIEW VW_JUEGOS_INFO_COMPLETA AS
SELECT
    J.TITULO,
    J.VALORACION,
    J.FECHA_L,
    J.PEGI,
    J.DESCRIPCION,
    J.DESARROLLADORA,
    J.MULTIPLAYER,
    J.CANTIDAD_J,
    J.PRECIO,
    J.DURACION,
    GROUP_CONCAT(DISTINCT G.GENERO SEPARATOR ', ') AS GENEROS,
    GROUP_CONCAT(DISTINCT P.PLATAFORMA SEPARATOR ', ') AS PLATAFORMAS,
	GROUP_CONCAT(DISTINCT I.IDIOMA SEPARATOR ', ') AS IDIOMAS
FROM
    JUEGOS J
    
    JOIN JUEGO_GENERO JG ON J.ID = JG.ID_JUEGO
    JOIN GENEROS G ON JG.ID_GENERO = G.ID
    
    JOIN JUEGO_PLATAFORMA JP ON J.ID = JP.ID_JUEGO
	JOIN PLATAFORMAS P ON JP.ID_PLATAFORMA = P.ID
    
	JOIN JUEGO_IDIOMA JI ON J.ID = JI.ID_JUEGO
    JOIN IDIOMAS I ON JI.ID_IDIOMA = I.ID
    
GROUP BY
    J.TITULO,
    J.VALORACION,
    J.FECHA_L,
    J.PEGI,
    J.DESCRIPCION,
    J.DESARROLLADORA,
    J.MULTIPLAYER,
    J.CANTIDAD_J,
    J.PRECIO,
    J.DURACION
ORDER BY
    J.TITULO ASC;
SELECT * FROM VW_JUEGOS_INFO_COMPLETA ;